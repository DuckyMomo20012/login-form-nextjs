generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Classroom {
  id        String    @id(map: "PK__LOP__7A3DE211D25227C2") @map("MALOP") @db.VarChar(20)
  nameClass String    @map("TENLOP") @db.NVarChar(100)
  idStaff   String?   @map("MANV") @db.VarChar(20)
  staffs    Staff?    @relation(fields: [idStaff], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__LOP__MANV__55F4C372")
  students  Student[]

  @@map("LOP")
}

model Staff {
  id          String      @id(map: "PK__NHANVIEN__603F51148A0C2BFD") @map("MANV") @db.VarChar(20)
  name        String      @map("HOTEN") @db.NVarChar(100)
  email       String?     @map("EMAIL") @db.VarChar(20)
  salary      Bytes?      @map("LUONG")
  nameCompany String      @map("TENDN") @db.NVarChar(100)
  password    Bytes       @map("MATKHAU") @db.VarBinary(20)
  classrooms  Classroom[]

  @@map("NHANVIEN")
}

model Student {
  id          String     @id(map: "PK__SINHVIEN__60228A284C072285") @map("MASV") @db.NVarChar(20)
  name        String     @map("HOTEN") @db.NVarChar(100)
  dob         DateTime?  @map("NGAYSINH") @db.DateTime
  address     String?    @map("DIACHI") @db.NVarChar(200)
  nameCompany String     @map("TENDN") @db.NVarChar(100)
  password    Bytes      @map("MATKHAU") @db.VarBinary(16)
  classrooms  Classroom? @relation(fields: [idClassroom], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__SINHVIEN__MALOP__55009F39")
  idClassroom String?    @map("MALOP") @db.VarChar(20)

  @@map("SINHVIEN")
}
